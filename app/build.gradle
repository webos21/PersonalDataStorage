apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.gmail.webos21.pds.app"

        minSdkVersion 16
        targetSdkVersion 29

        versionCode 2
        versionName "1.0.2"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    runtimeOnly project(":WebFront")
    implementation project(':webos21-java')
    implementation project(':webos21-android');
    implementation project(':WebNano');
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-perf'
    implementation "androidx.appcompat:appcompat:1.2.0"                        // from com.android.support:appcompat-v7
    implementation "androidx.preference:preference:1.1.1"                      // from com.android.support:preference-v7
    implementation 'com.google.android.material:material:1.4.0-alpha02'         // from com.android.support:design
    implementation 'androidx.biometric:biometric:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestUtil 'androidx.test:orchestrator:1.3.0'
    testImplementation 'junit:junit:4.13.2'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx.appcompat") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "1.+"
            }
        }
    }
}
